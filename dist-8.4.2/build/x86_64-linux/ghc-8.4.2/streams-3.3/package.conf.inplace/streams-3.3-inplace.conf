name: streams
version: 3.3
id: streams-3.3-inplace
key: streams-3.3-inplace
license: BSD-3-Clause
copyright: Copyright 2011-2013 Edward Kmett
           Copyright 2010 Tony Morris, Oliver Taylor, Eelis van der Weegen
           Copyright 2007-2010 Wouter Swierstra, Bas van Dijk
           Copyright 2008 Iavor S. Diatchki
maintainer: Edward A. Kmett <ekmett@gmail.com>
author: Edward A. Kmett
stability: provisional
homepage: http://github.com/ekmett/streams
synopsis: Various Haskell 2010 stream comonads
description:
    Various Haskell 2010 stream comonads.
    * "Data.Stream.Future" provides a coinductive anti-causal stream, or non-empty 'ZipList'. The comonad provides access to only the
    tail of the stream. Like a conventional 'ZipList', this is /not/ a monad.
    .
    > data Future a = Last a | a :< Future a
    .
    * "Data.Stream.Future.Skew" provides a non-empty skew-binary random-access-list with the semantics of @Data.Stream.Future@. As with
    "Data.Stream.Future" this stream is not a 'Monad', since the 'Applicative' instance zips streams of potentially differing lengths.
    The random-access-list structure provides a number of operations logarithmic access time, but makes 'Data.Stream.Future.Skew.cons'
    less productive. Where applicable "Data.Stream.Infinite.Skew" may be more efficient, due to a lazier and more efficient 'Applicative'
    instance.
    .
    >
    .
    * "Data.Stream.Infinite" provides a coinductive infinite anti-causal stream. The 'Comonad' provides access to the tail of the
    stream and the 'Applicative' zips streams together. Unlike 'Future', infinite stream form a 'Monad'. The monad diagonalizes
    the 'Stream', which is consistent with the behavior of the 'Applicative', and the view of a 'Stream' as a isomorphic to the reader
    monad from the natural numbers. Being infinite in length, there is no 'Alternative' instance.
    .
    > data Stream a = a :< Stream a
    .
    * "Data.Stream.Infinite.Skew" provides an infinite skew-binary random-access-list with the semantics of "Data.Stream.Infinite"
    Since every stream is infinite, the 'Applicative' instance can be considerably less strict than the corresponding instance for
    "Data.Stream.Future.Skew" and performs asymptotically better.
    .
    >
    .
    * "Data.Stream.Infinite.Functional.Zipper" provides a bi-infinite sequence, represented as a pure function with an accumulating
    parameter added to optimize moving the current focus.
    .
    > data Zipper a = !Integer :~ (Integer -> a)
    .
    * "Data.Stream.Supply" provides a comonadic supply of unique values, which are
    generated impurely as the tree is explored.
category: Control, Comonads
abi: inplace
exposed: True
exposed-modules:
    Data.Stream.Future Data.Stream.Future.Skew Data.Stream.Infinite
    Data.Stream.Infinite.Functional.Zipper Data.Stream.Infinite.Skew
    Data.Stream.Supply
import-dirs: /home/dcartwright/v6/streams/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/streams-3.3/build
library-dirs: /home/dcartwright/v6/streams/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/streams-3.3/build
dynamic-library-dirs: /home/dcartwright/v6/streams/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/streams-3.3/build
data-dir: /home/dcartwright/v6/streams
hs-libraries: HSstreams-3.3-inplace
depends:
    adjunctions-4.4-inplace base-4.11.1.0
    comonad-5.0.3-a7e5456192a7dd5ef021fab18f4aab83d09c603ccdb37be04886a54feef45785
    distributive-0.5.3-78ebf98c634c4cbffca20c1891f8b8b46a5806854281a3377649961ecbd55257
    semigroupoids-6.0-inplace
    semigroups-0.18.4-628587bb5989209cc6b2a94a5b4c11fcfc01c973309c50eb917f09b339988a11
abi-depends: adjunctions-4.4-inplace=inplace
             base-4.11.1.0=ecd125f03c784a67b61c9a8f6dd222e4
             comonad-5.0.3-a7e5456192a7dd5ef021fab18f4aab83d09c603ccdb37be04886a54feef45785=6fe99e29980f827985122481bae30262
             distributive-0.5.3-78ebf98c634c4cbffca20c1891f8b8b46a5806854281a3377649961ecbd55257=6291ddbfc6d3c118bca50f66bc6fa509
             semigroupoids-6.0-inplace=inplace
             semigroups-0.18.4-628587bb5989209cc6b2a94a5b4c11fcfc01c973309c50eb917f09b339988a11=a7ff0be4999c7c4357a1e4655b5664bf
haddock-interfaces: /home/dcartwright/v6/streams/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/streams-3.3/doc/html/streams/streams.haddock
haddock-html: /home/dcartwright/v6/streams/dist-8.4.2/build/x86_64-linux/ghc-8.4.2/streams-3.3/doc/html/streams
